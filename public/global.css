table {
	width: 100%;
}

.ch {
	display: flex;
	justify-content: center;
}

.success,
.error,
.warning,
.info {
	display: inline-block;
	padding: 0.5rem;
	color: white;
	border-radius: 4px;
	text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);
}

.success {
	background: rgb(28, 184, 65);
	/* this is a green */
}

.error {
	background: rgb(202, 60, 60);
	/* this is a maroon */
}

.warning {
	background: rgb(223, 117, 20);
	/* this is an orange */
}

.pure-button.info, .info {
	background: rgb(66, 184, 221);
	/* this is a light blue */
}

/*
Add transition to containers so they can push in and out.
*/
#layout,
#menu,
.menu-link {
	-webkit-transition: all 0.2s ease-out;
	-moz-transition: all 0.2s ease-out;
	-ms-transition: all 0.2s ease-out;
	-o-transition: all 0.2s ease-out;
	transition: all 0.2s ease-out;
}

/*
This is the parent `<div>` that contains the menu and the content area.
*/
#layout {
	position: relative;
	left: 0;
	padding-left: 0;
}

#layout.active #menu {
	left: 150px;
	width: 150px;
}

#layout.active .menu-link {
	left: 150px;
}

/* -- Responsive Styles (Media Queries) ------------------------------------- */

/*
Hides the menu at `48em`, but modify this based on your app's needs.
*/
@media (min-width: 48em) {

	#layout {
		padding-left: 150px; /* left col width "#menu" */
		left: 0;
	}

	#layout #menu {
		left: 150px;
	}

	#menuLink.menu-link {
		position: fixed;
		left: 150px;
		display: none;
	}

	#layout.active #menuLink.menu-link {
		left: 150px;
	}
}

@media (max-width: 48em) {
	/* Only apply this when the window is small. Otherwise, the following
    case results in extra padding on the left:
        * Make the window small.
        * Tap the menu to trigger the active state.
        * Make the window large again.
    */
	#layout.active {
		position: relative;
		left: 150px;
	}
}